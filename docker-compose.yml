version: '3'
services:
    # database:
    mysql:
        image: "mysql:8"     ### 8.0.32-1.el8 was used, but rised: django.db.utils.OperationalError: (1118, 'Row size too large. 
                                 ### The maximum row size for the used table type, not counting BLOBs, is 65535. 
                                 ###This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs')
        restart: always
        environment:
            MYSQL_PASSWORD: "${STEX_DBPASSW}"
            MYSQL_USER: "${STEX_DBUSER}"
            MYSQL_RANDOM_ROOT_PASSWORD: "YES"
            MYSQL_DATABASE: "${STEX_DBNAME}"
        command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

    # Redis server is used as message broker and result-store for celery
    redis: 
        image: "redis:alpine"   ### version 4.3.4 fits to celery 5.2.
        restart: always
        sysctls:
            # change this Linux Kernel Parameter (default is 128) within container because of this WARNING
            # "The TCP backlog setting of 511 cannot be enforced
            # because /proc/sys/net/core/somaxconn is set to the lower value of 128."
            net.core.somaxconn: 512     # maximal number of connections
        volumes:
            - ./redisinit/redis.conf:/usr/local/etc/redis/redis.conf       # version 6 from  https://redis.io/topics/config     ## adapted
        command:
            redis-server /usr/local/etc/redis/redis.conf

    #django server + celery as some kind of wrapper for idp:
    idp:
        build: .
        restart: always
        depends_on:
        - mysql
        - redis
        env_file:
            - .env
        ports:
            - "127.0.0.1:8000:8000"   
            #- "127.0.0.1:3000:3000"         ### needed for debugging only

    # testing client:
    client:
        build: client/
        restart: always
        depends_on:
            - idp
        volumes:
            - ./client:/src/app
        ports:
            - "127.0.0.1:8001:8001"
        profiles:
            - testing